l <- function(x = matrix()) {
x
}
l(1:9,3,3)
l(c(1:9,3,3))
l <- function(x = matrix()) {
x <- matrix(x)
}
l(c(1:9,3,3))
k <- function(x = matrix()) {
x
}
k(c(1:9, 3,3))
m <- function(x = matrix()){
mat <- matrix(x)
mat
}
m(c(1:9,3,3))
m(1:9)
x = matrix()
x
m(1:9, 3,3)
str(m)
m
m(c(1:9,3,3))
j
k
l
m
l(c(1:9,3,3))
j(c(1:9,3,3))
m(c(1:9,3,3))
a <- function(x = matrix()) {
x
}
b <- matrix(1:9,3,3)
a(b)
c <- 1:4
a(c)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function() x   ##where x is already a matrix
getINV <- function(x){
i <<- solve(x)
}
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
cacheSolve <- function(x, ...) {
i <- x$getINV
if(!is.null(i)) {
message ("getting cached data")
return i
}
m <- x$getMatrix()
i <- solve(m,...)
i
}
a <- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,2))
a$getMatrix
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function(x) {x}    ##where x is already a matrix
getINV <- function(x){
i <<- solve(x)
}
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
a <- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,2))
a$getMatrix()
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function( ) {x}    ##where x is already a matrix
getINV <- function(x){
i <<- solve(x)
}
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
a <- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,2))
a$getMatrix()
cacheSolve <- function(x, ...) {
i <- x$getINV
if(!is.null(i)) {
message ("getting cached data")
return i
}
m <- x$getMatrix()
i <- solve(m,...)
i
}
cacheSolve <- function(x, ...) {
i <- x$getINV
if(!is.null(i)) {
message("getting cached data")
return i
}
m <- x$getMatrix()
i <- solve(m,...)
i
}
cacheSolve <- function(x, ...) {
i <- x$getINV
if(!is.null(i)) {
message("getting cached data")
return (i)
}
m <- x$getMatrix()
i <- solve(m,...)
i
}
cacheSolve(a)
b <- matrix(1:9, 3,3)
makeCacheMatrix(b)
b <- makeCacheMatrix()
b$setMatrix(matrix(1:9,3,3))
cacheSolve(b)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function( ) {x}    ##where x is already a matrix
getINV <- function(){i}
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
cacheSolve <- function(x, ...) {
i <- x$getINV
if(!is.null(i)) {
message("getting cached data")
return (i)
}
m <- x$getMatrix()
i <- solve(m,...)
i
}
a <- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,3))
a$setMatrix(matrix(c(1,2,12,13),2,2))
a$getMatrix
a$getMatrix()
cacheSolve(a)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function( ) {x}    ##where x is already a matrix
getINV <- function(){i}
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
cacheSolve <- function(x, ...) {
i <- x$getINV()
if(!is.null(i)) {
message("getting cached data")
return (i)
}
m <- x$getMatrix()
i <- solve(m,...)
i
}
a <- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,2))
a$getMatrix()
cacheSolve(a)
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <- x$getINV()
if(!is.null(i)) {
message("getting cached data")
return (i)
}
m <- x$getMatrix()
i <<- solve(m,...)
i
}
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <- x$getINV()
if(!is.null(i)) {
message("getting cached data")
return (i)
}
m <- x$getMatrix()
i <- solve(m,...)
i
}
cacheSolve(a)
a$getINV()
cacheSolve(a)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function( ) x    ##where x is already a matrix
getINV <- function() i
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
cacheSolve <- function(x, ...) {
i <- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
}
m <- x$getMatrix()
i <<- solve(m)
i
}
a<- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,2))
a$getMatrix
a$getMatrix()
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
}
m <- x$getMatrix()
i <- solve(m)
i
}
cacheSolve(a)
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <<- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
}
m <- x$getMatrix()
i <- solve(m)
i
}
cacheSolve(a)
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <<- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
}
else {
m <- x$getMatrix()
i <- solve(m)
i
}
}
cacheSolve(a)
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <<- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
}
else {
m <- x$getMatrix()
i <<- solve(m)
i
}
}
cacheSolve(a)
cacheSolve(a)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function( ) x    ##where x is already a matrix
getINV <- function() i
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
cacheSolve <- function(x, ...) {
i <<- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
}
else {
m <- x$getMatrix()
i <<- solve(m)
i
}
}
a<- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,2))
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <<- x$getINV()
i
if(!is.null(i)) {
print("getting cached data")
i
}
else {
m <- x$getMatrix()
i <<- solve(m)
i
}
}
cacheSolve(a)
View(i)
i <<- null
i <<- NULL
cacheSolve(a)
print("getting cached data")
print("getting cached data")
print("getting cached data")
print("getting cached data")
cacheSolve <- function(x, ...) {
i <<- x$getINV()
i
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <<- solve(m)
i
}
}
i <<- NULL
cacheSolve(a)
cacheSolve(a)
i <<- NULL
cacheSolve <- function(x, ...) {
print(i)
i <<- x$getINV()
i
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <<- solve(m)
i
}
}
cacheSolve(a)
cacheSolve <- function(x, ...) {
print(i)
i <<- x$getINV()
print(i)
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <<- solve(m)
i
}
}
i <<- NULL
cacheSolve(a)
cacheSolve(a)
a$getINV()
cacheSolve <- function(x, ...) {
print(i)
i <- x$getINV()
print(i)
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <<- solve(m)
i
}
}
cacheSolve(a)
cacheSolve <- function(x, ...) {
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <<- solve(m)
i
}
}
cacheSolve(a)
b <- makeCacheMatrix()
b$setMatrix(matrix(1:9,3,3))
b$getMatrix
b$getMatrix()
cacheSolve(b)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function( ) x    ##where x is already a matrix
getINV <- function() i
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
cacheSolve <- function(x, ...) {
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <- solve(m)
i
}
}
b <- makeCacheMatrix()
b$setMatrix(matrix(1:9,3,3))
b$getMatrix()
cacheSolve(b)
cacheSolve <- function(x, ...) {
i <- x$getINV
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <- solve(m)
x$setINV(i)
i
}
}
makeCacheMatrix <- function(x = matrix()) {
i <- NULL ##where i is the inverse matrix
setMatrix <- function(y) {  #where y is already a matrix
x <<- y
i <<- NULL
}
getMatrix <- function( ) x    ##where x is already a matrix
setINV <- function (inv) i <<- inv
getINV <- function() i
list(setMatrix = setMatrix, getMatrix = getMatrix, getINV = getINV)
}
cacheSolve <- function(x, ...) {
i <- x$getINV
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <- solve(m)
x$setINV(i)
i
}
}
a <- makeCacheMatrix()
a$setMatrix(matrix(c(1,2,12,13),2,2))
a$getMatrix
a$getMatrix()
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
}
else {
print("i was null")
m <- x$getMatrix()
i <- solve(m)
x$setINV(i)
i
}
}
cacheSolve(a)
cacheSolve <- function(x, ...) {
i <- x$getINV()
if(!is.null(i)) {
print("getting cached data")
i
m <- x$getMatrix()
i <- solve(m)
x$setINV(i)
i
}
cacheSolve(a)
